name: Update Changelog on Release

permissions:
  contents: write

on:
  release:
    types: [published]

jobs:
  update_changelog:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get release details from GitHub
        id: release_info
        run: |
          RELEASE_TITLE=$(jq -r '.release.name' "$GITHUB_EVENT_PATH")
          RELEASE_NOTES=$(jq -r '.release.body' "$GITHUB_EVENT_PATH")
          echo "RELEASE_TITLE=${RELEASE_TITLE}" >> $GITHUB_ENV
          echo "RELEASE_NOTES=${RELEASE_NOTES}" >> $GITHUB_ENV

      - name: Update Changelog
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git pull origin main

          # Fetch the latest tag and release date
          LATEST_TAG=$(git describe --tags --abbrev=0)
          RELEASE_DATE=$(date +'%Y-%m-%d')

          # Prepare changelog entry
          CHANGELOG_ENTRY="v${LATEST_TAG} - ${RELEASE_DATE} - ##${RELEASE_TITLE}##\n${RELEASE_NOTES}\n\n"

          # Categorize release notes
          echo "${CHANGELOG_ENTRY}" >> CHANGELOG.md

          # Append categorized entries
          echo -e "## Breaking Changes 🛠\n$(git log --merges --grep='breaking-change' --pretty=format:'- %s' main)...\n" >> CHANGELOG.md
          echo -e "## Bugs 🐞\n$(git log --merges --grep='bug' --pretty=format:'- %s' main)...\n" >> CHANGELOG.md
          echo -e "## Exciting New Features 🎉\n$(git log --merges --grep='enhancement' --pretty=format:'- %s' main)...\n" >> CHANGELOG.md
          echo -e "## Security improvements 🔐\n$(git log --merges --grep='security' --pretty=format:'- %s' main)...\n" >> CHANGELOG.md
          echo -e "## Other Changes\n$(git log --merges --pretty=format:'- %s' main)...\n" >> CHANGELOG.md

          # Add, commit, and push the changes
          git add CHANGELOG.md
          git commit -m "Update changelog for new release"
          git push origin main
